#include "qkd-tag.h"

namespace ns3 {

NS_LOG_COMPONENT_DEFINE ("QKDTag");

NS_OBJECT_ENSURE_REGISTERED (QKDTag);

TypeId
QKDTag::GetTypeId (void)
{
  static TypeId tid = TypeId ("ns3::QKDTag")
    .SetParent<Tag> ()
    .AddConstructor<QKDTag> ()
    .AddAttribute ("StringValue",
                   "A string tag",
                   EmptyAttributeValue (),
                   MakeStringAccessor (&QKDTag::GetStringValue),
                   MakeStringChecker ())
  ;
  return tid;
}

TypeId
QKDTag::GetInstanceTypeId (void) const
{
  return GetTypeId ();
}

uint32_t
QKDTag::GetSerializedSize (void) const
{
  return m_stringValue.size () + 1; // Include null terminator
}

void 
QKDTag::Serialize (TagBuffer i) const
{
  NS_LOG_INFO("In Serialize.");
  i.WriteU8 (m_stringValue);
}
void 
QKDTag::Deserialize (TagBuffer i)
{
  NS_LOG_INFO("In Deserialize.");
  m_stringValue = i.ReadU8 ();
}
void
QKDTag::Print (std::ostream &os) const
{
  os << "tag = " << m_stringValue;
}

void
QKDTag::SetStringValue (const std::string &value)
{
  m_stringValue = value;
}

std::string
QKDTag::GetStringValue (void) const
{
  return m_stringValue;
}

} // namespace ns3
